{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Desktop/fanztik/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport VideoPost from './components/Video';\nimport './FeedScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyPosts = [{\n  id: '2',\n  video: 'https://notjustdev-dummy.s3.us-east-2.amazonaws.com/vertical-videos/2.mp4',\n  caption: 'Caption of the post'\n}, {\n  id: '1',\n  video: 'https://notjustdev-dummy.s3.us-east-2.amazonaws.com/vertical-videos/1.mp4',\n  caption: 'Hey there'\n}, {\n  id: '3',\n  video: 'https://notjustdev-dummy.s3.us-east-2.amazonaws.com/vertical-videos/3.mp4',\n  caption: 'Hola'\n}, {\n  id: '4',\n  video: 'https://notjustdev-dummy.s3.us-east-2.amazonaws.com/vertical-videos/4.mp4',\n  caption: 'Piano practice'\n}, {\n  id: '5',\n  video: 'https://notjustdev-dummy.s3.us-east-2.amazonaws.com/vertical-videos/5.mp4',\n  caption: 'Hello World!'\n}];\nconst FeedScreen = () => {\n  _s();\n  const [activePostId, setActivePostId] = useState(dummyPosts[0].id);\n  const [posts, setPosts] = useState(dummyPosts);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setActivePostId(entry.target.dataset.id);\n        }\n      });\n    }, {\n      threshold: 0.5\n    });\n    const elements = containerRef.current.querySelectorAll('.video-post');\n    elements.forEach(el => observer.observe(el));\n    return () => {\n      elements.forEach(el => observer.unobserve(el));\n    };\n  }, [posts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-screen\",\n    ref: containerRef,\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-id\": post.id,\n      className: \"video-post-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(VideoPost, {\n        post: post,\n        activePostId: activePostId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedScreen, \"Zww8Erfha0YDQ9zBLSaQBOy0MFo=\");\n_c = FeedScreen;\nexport default FeedScreen;\nvar _c;\n$RefreshReg$(_c, \"FeedScreen\");","map":{"version":3,"names":["React","useEffect","useState","useRef","VideoPost","jsxDEV","_jsxDEV","dummyPosts","id","video","caption","FeedScreen","_s","activePostId","setActivePostId","posts","setPosts","containerRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","dataset","threshold","elements","current","querySelectorAll","el","observe","unobserve","className","ref","children","map","post","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/steve/Desktop/fanztik/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport VideoPost from './components/Video';\nimport './FeedScreen.css';\n\nconst dummyPosts = [\n  {\n    id: '2',\n    video:\n      'https://notjustdev-dummy.s3.us-east-2.amazonaws.com/vertical-videos/2.mp4',\n    caption: 'Caption of the post',\n  },\n  {\n    id: '1',\n    video:\n      'https://notjustdev-dummy.s3.us-east-2.amazonaws.com/vertical-videos/1.mp4',\n    caption: 'Hey there',\n  },\n  {\n    id: '3',\n    video:\n      'https://notjustdev-dummy.s3.us-east-2.amazonaws.com/vertical-videos/3.mp4',\n    caption: 'Hola',\n  },\n  {\n    id: '4',\n    video:\n      'https://notjustdev-dummy.s3.us-east-2.amazonaws.com/vertical-videos/4.mp4',\n    caption: 'Piano practice',\n  },\n  {\n    id: '5',\n    video:\n      'https://notjustdev-dummy.s3.us-east-2.amazonaws.com/vertical-videos/5.mp4',\n    caption: 'Hello World!',\n  },\n];\n\nconst FeedScreen = () => {\n  const [activePostId, setActivePostId] = useState(dummyPosts[0].id);\n  const [posts, setPosts] = useState(dummyPosts);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActivePostId(entry.target.dataset.id);\n          }\n        });\n      },\n      { threshold: 0.5 }\n    );\n\n    const elements = containerRef.current.querySelectorAll('.video-post');\n    elements.forEach((el) => observer.observe(el));\n\n    return () => {\n      elements.forEach((el) => observer.unobserve(el));\n    };\n  }, [posts]);\n\n  return (\n    <div className=\"feed-screen\" ref={containerRef}>\n      {posts.map((post) => (\n        <div key={post.id} data-id={post.id} className=\"video-post-wrapper\">\n          <VideoPost post={post} activePostId={activePostId} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAG,CACjB;EACEC,EAAE,EAAE,GAAG;EACPC,KAAK,EACH,2EAA2E;EAC7EC,OAAO,EAAE;AACX,CAAC,EACD;EACEF,EAAE,EAAE,GAAG;EACPC,KAAK,EACH,2EAA2E;EAC7EC,OAAO,EAAE;AACX,CAAC,EACD;EACEF,EAAE,EAAE,GAAG;EACPC,KAAK,EACH,2EAA2E;EAC7EC,OAAO,EAAE;AACX,CAAC,EACD;EACEF,EAAE,EAAE,GAAG;EACPC,KAAK,EACH,2EAA2E;EAC7EC,OAAO,EAAE;AACX,CAAC,EACD;EACEF,EAAE,EAAE,GAAG;EACPC,KAAK,EACH,2EAA2E;EAC7EC,OAAO,EAAE;AACX,CAAC,CACF;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACK,UAAU,CAAC,CAAC,CAAC,CAACC,EAAE,CAAC;EAClE,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACK,UAAU,CAAC;EAC9C,MAAMU,YAAY,GAAGd,MAAM,CAAC,IAAI,CAAC;EAEjCF,SAAS,CAAC,MAAM;IACd,MAAMiB,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACXA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBT,eAAe,CAACQ,KAAK,CAACE,MAAM,CAACC,OAAO,CAACjB,EAAE,CAAC;QAC1C;MACF,CAAC,CAAC;IACJ,CAAC,EACD;MAAEkB,SAAS,EAAE;IAAI,CACnB,CAAC;IAED,MAAMC,QAAQ,GAAGV,YAAY,CAACW,OAAO,CAACC,gBAAgB,CAAC,aAAa,CAAC;IACrEF,QAAQ,CAACN,OAAO,CAAES,EAAE,IAAKZ,QAAQ,CAACa,OAAO,CAACD,EAAE,CAAC,CAAC;IAE9C,OAAO,MAAM;MACXH,QAAQ,CAACN,OAAO,CAAES,EAAE,IAAKZ,QAAQ,CAACc,SAAS,CAACF,EAAE,CAAC,CAAC;IAClD,CAAC;EACH,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,oBACET,OAAA;IAAK2B,SAAS,EAAC,aAAa;IAACC,GAAG,EAAEjB,YAAa;IAAAkB,QAAA,EAC5CpB,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACd/B,OAAA;MAAmB,WAAS+B,IAAI,CAAC7B,EAAG;MAACyB,SAAS,EAAC,oBAAoB;MAAAE,QAAA,eACjE7B,OAAA,CAACF,SAAS;QAACiC,IAAI,EAAEA,IAAK;QAACxB,YAAY,EAAEA;MAAa;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAD7CJ,IAAI,CAAC7B,EAAE;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAlCID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}